[user]
    name = Gregory Duchatelet
    email = gregory.duchatelet@infomaniak.com
[core]
    editor = vim
    whitespace = trailing-space,space-before-tab,indent-with-non-tab
    autocrlf = input

[merge]
    tool = vimdiff

[alias]
    st = status
    br = branch
    co = checkout
    ci = commit
    df = diff
    ds = "diff --staged"
    dw = "diff --word-diff"
    # show rev:/path/to/file
    cat = show
    unstage = "reset HEAD --"
    oops = "commit --mend -a -C HEAD"
    last = "log -1 HEAD"
    topush = "log origin/master..HEAD"
    rr = !"git branch -r -d -- ; git push origin :--"
    cpa = !"git commit -a ; git push"
    master = !"git checkout master; git pull"
    standup = "log --since yesterday --author gregory"
    purr = "pull --rebase"
    sb = "status -sb"
    ready = "rebase -i @{u}"
    restore = !"sh -c 'git checkout $(git rev-list -n 1 HEAD -- "$1")^ -- "$1"'"
    lg = "log --pretty=format:'%Cred%h%Creset -%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'"
    logg = "log --oneline --decorate --graph --all"
    wipe = "reset --hard HEAD"
    #pu = !"git fetch origin -v; git fetch upstream -v; git merge upstream/master"
    #puansible = !"git fetch origin -v; git fetch upstream -v; git merge upstream/devel"
    subup = "submodule update --init --recursive"
    #up = !/Users/gregory/.git-up/git-up
    #prod = !"git pull && /Users/gregory/.git-up/git-up prod"
    around = !"f() { if [ -z \"$2\" ]; then duration='1'; else duration=\"$2\"; shift; fi; d=$1; shift; if [ -z \"$d\" ] ; then echo 'Usage: git around 2015-11-01 [4]'; else git log --after=$( date +\"%Y-%m-%d\" -d \"$d -$duration days\" ) --before=$( date +\"%Y-%m-%d\" -d \"$d +$duration days\" ) $* ; fi; }; f"
    mr = !sh -c 'git fetch $1 merge-requests/$2/head:mr-$1-$2 && git checkout mr-$1-$2' -
    pulll = pull --rebase --recurse-submodules=yes
    #open = "!git remote -v | awk -F '[@ ]'" '{print $2; exit}' #| sed 's/:/\//g;s/.git//g;s#^#http://#' | xargs open"


[branch]
    autosetupmerge = true


[color]
    diff = auto
    status = auto
    branch = auto
    interactive = auto
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[help]
    autocorrect = 1
[push]
    # git version < 1.8 :
    default = matching
    # new version > 1.8 :
    # default = simple
[ez]
    sshuser = SYSTEM
[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
[pull]
    rebase = false
[diff]
    tool = vimdiff
[difftool]
    prompt = false
